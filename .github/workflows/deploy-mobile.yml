name: Publish  

on:
    workflow_call:
      inputs:
        deploy_android:
          description: "Deploy Android application"
          required: true
          default: true
          type: boolean
        deploy_ios:
          description: "Deploy iOS application"
          required: true
          default: true
          type: boolean
        internal_testing:
          description: "Deploy to internal testing"
          required: true
          default: true
          type: boolean
        ref:
          description: "Git reference to deploy"
          required: true
          default: "main"
          type: string

jobs:
    deploy-android:
        if: ${{ inputs.deploy_android == true }}
        runs-on: ubuntu-latest
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          KEYSTORE_ENCODED: ${{ secrets.KEYSTORE_ENCODED }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          APPSTORE_CONNECT_KEY_ENCODED: ${{ secrets.APPSTORE_CONNECT_KEY_BASE64 }}
          BUNDLE_GEMFILE: ./frontend/Gemfile
        steps:
            - name: Checkout project
              uses: actions/checkout@v4
              with:
                ref: ${{ inputs.ref }}

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                node-version: latest
                cache: npm
                cache-dependency-path: "./frontend/package.json"

            - name: Install dependencies
              working-directory: ./frontend
              run: npm ci

            - name: Decode secrets
              working-directory: ./frontend
              run: |
                echo $KEYSTORE_ENCODED | base64 --decode > release.keystore
                echo "KEYSTORE_FILE=$(realpath release.keystore)" >> $GITHUB_ENV
                
                echo $GOOGLE_PLAY_SERVICE_ACCOUNT_JSON >> GooglePlay.json
                echo "GOOGLE_PLAY_SERVICE_ACCOUNT_FILE=$(realpath GooglePlay.json)" >> $GITHUB_ENV
                
                echo $FIREBASE_SERVICE_ACCOUNT_JSON >> Firebase.json
                echo "FIREBASE_SERVICE_CREDENTIALS_FILE=$(realpath Firebase.json)" >> $GITHUB_ENV

                echo $APPSTORE_CONNECT_KEY_ENCODED | base64 --decode > AppStoreConnectKey.p8
                echo "APPSTORE_CONNECT_KEY_FILE=$(realpath AppStoreConnectKey.p8)" >> $GITHUB_ENV

            - uses: ruby/setup-ruby@v1
              with:
                ruby-version: '2.6'
                bundler-cache: true

            - name: Upload to Firebase
              if: ${{ inputs.internal_testing == true }}
              working-directory: ./frontend
              run: bundle exec fastlane android deploy_firebase

            - name: Upload to Google Play
              if: ${{ inputs.internal_testing == false }}
              working-directory: ./frontend
              run: bundle exec fastlane android deploy_play_store

    deploy-ios:
      if: ${{ inputs.deploy_ios == true }}
      runs-on: macos-15
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APPLE_DEVELOPER_TEAM_ID: ${{ secrets.APPLE_DEVELOPER_TEAM_ID }}
        APPSTORE_CONNECT_TEAM_ID: ${{ secrets.APPSTORE_CONNECT_TEAM_ID }}
        APPSTORE_CONNECT_KEY_ID: ${{ secrets.APPSTORE_CONNECT_KEY_ID }}
        APPSTORE_CONNECT_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_ISSUER_ID }}
        APPSTORE_CONNECT_KEY_FILE: ${{ secrets.APPSTORE_CONNECT_KEY_FILE }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        APPSTORE_CONNECT_KEY_ENCODED: ${{ secrets.APPSTORE_CONNECT_KEY_BASE64 }}
        BUNDLE_GEMFILE: ./frontend/Gemfile
      steps:
            - name: Checkout project
              uses: actions/checkout@v4
              with:
                ref: ${{ inputs.ref }}

            - uses: webfactory/ssh-agent@v0.6.0
              with:
                ssh-private-key: ${{ secrets.APPSTORE_CERTIFICATES_SSH_KEY }}

            - name: Setup Xcode
              run: sudo xcode-select -s /Applications/Xcode_16.4.app/Contents/Developer

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                node-version: latest
                cache: npm
                cache-dependency-path: "./frontend/package.json"

            - name: Install dependencies
              working-directory: ./frontend
              run: npm ci

            - uses: ruby/setup-ruby@v1
              with:
                ruby-version: '2.6'
                bundler-cache: true

            - name: Decode secrets
              working-directory: ./frontend
              run: |
                echo $GOOGLE_PLAY_SERVICE_ACCOUNT_JSON >> GooglePlay.json
                echo "GOOGLE_PLAY_SERVICE_ACCOUNT_FILE=$(realpath GooglePlay.json)" >> $GITHUB_ENV
                
                echo $APPSTORE_CONNECT_KEY_ENCODED | base64 --decode > AppStoreConnectKey.p8
                echo "APPSTORE_CONNECT_KEY_FILE=$(realpath AppStoreConnectKey.p8)" >> $GITHUB_ENV

            - name: Deploy to Testflight
              if: ${{ inputs.internal_testing == true }}
              working-directory: ./frontend
              run: bundle exec fastlane ios deploy_testflight

            - name: Deploy to App Store
              if: ${{ inputs.internal_testing == false }}
              working-directory: ./frontend
              run: bundle exec fastlane ios deploy_app_store