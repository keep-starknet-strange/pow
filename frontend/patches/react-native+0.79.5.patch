diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp
index d762d8b..cac765d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp
@@ -136,6 +136,7 @@ ShadowNode::ShadowNode(
 ShadowNode::Unshared ShadowNode::clone(
     const ShadowNodeFragment& fragment) const {
   const auto& family = *family_;
+  std::lock_guard<std::recursive_mutex> npGuard(family.nativePropsMutex);
   const auto& componentDescriptor = family.componentDescriptor_;
   if (family.nativeProps_DEPRECATED != nullptr) {
     auto propsParserContext = PropsParserContext{family_->getSurfaceId(), {}};
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h
index 203f895..81f4012 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h
@@ -9,6 +9,7 @@
 
 #include <memory>
 #include <shared_mutex>
+#include <mutex>
 
 #include <react/renderer/core/EventEmitter.h>
 #include <react/renderer/core/InstanceHandle.h>
@@ -116,6 +117,7 @@ class ShadowNodeFamily final {
    * architecture and will be removed in the future.
    */
   mutable std::unique_ptr<folly::dynamic> nativeProps_DEPRECATED;
+  mutable std::recursive_mutex nativePropsMutex;
 
   /**
    * @return tag for the ShadowNodeFamily.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp
index 4bcc9c4..82ab119 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp
@@ -125,6 +125,7 @@ std::shared_ptr<ShadowNode> UIManager::cloneNode(
   auto props = ShadowNodeFragment::propsPlaceholder();
 
   if (!rawProps.isEmpty()) {
+    std::lock_guard<std::recursive_mutex> npGuard(family.nativePropsMutex);
     if (family.nativeProps_DEPRECATED != nullptr) {
       // 1. update the nativeProps_DEPRECATED props.
       //
@@ -436,6 +437,7 @@ void UIManager::setNativeProps_DEPRECATED(
     const ShadowNode::Shared& shadowNode,
     RawProps rawProps) const {
   auto& family = shadowNode->getFamily();
+  family.nativePropsMutex.lock();
   if (family.nativeProps_DEPRECATED) {
     // Values in `rawProps` patch (take precedence over)
     // `nativeProps_DEPRECATED`. For example, if both `nativeProps_DEPRECATED`
@@ -450,6 +452,7 @@ void UIManager::setNativeProps_DEPRECATED(
     family.nativeProps_DEPRECATED =
         std::make_unique<folly::dynamic>((folly::dynamic)rawProps);
   }
+  family.nativePropsMutex.unlock();
 
   shadowTreeRegistry_.visit(
       family.getSurfaceId(), [&](const ShadowTree& shadowTree) {
